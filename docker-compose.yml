version: '3.1'
services:
  recipes-api:
    container_name: recipes-api
    depends_on:
      - recipes-db
      - recipes-cache
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - ${PORT}:${PORT}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/uploads
      - ./:/src
    env_file:
      - .env
    restart: unless-stopped
    links:
      - recipes-db
      - recipes-cache
  recipes-db:
    container_name: recipes-db
    image: postgres:latest
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./recipes-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: unless-stopped
  recipes-cache:
    container_name: recipes-cache
    image: redis:6.2-alpine
    restart: always
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    volumes:
      - recipes-cache:/data
    environment:
      REDIS_USER: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
  redis-commander:
    depends_on:
      - recipes-cache
    container_name: redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=recipes-cache
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_USER=${REDIS_USER}
    ports:
      - '8081:8081'
volumes:
  recipes-db:
    driver: local
  recipes-cache:
    driver: local

networks:
  app-network:
    driver: bridge
