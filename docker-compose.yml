version: "3.1"
services:
  recipes-db:
    container_name: recipes-db
    hostname: recipes-db
    env_file:
      - ./.env
    image: postgres:latest
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./backend/recipes-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: unless-stopped
    network_mode: bridge

  recipes-cache:
    container_name: recipes-cache
    hostname: recipes-cache
    image: redis:6.2-alpine
    restart: always
    env_file:
      - ./.env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./backend/recipes-cache:/data
    environment:
      REDIS_USER: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    network_mode: bridge

  recipes-api:
    container_name: recipes-api
    hostname: recipes-api
    env_file:
      - ./.env
    depends_on:
      - recipes-db
      - recipes-cache
    build:
      context: .
      dockerfile: ./docker/dockerfile-api-backend
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./backend:/usr/src/backend
      - ./backend/node_modules:/usr/src/backend/node_modules
      - ./backend/static:/usr/src/backend/static
    restart: unless-stopped
    links:
      - recipes-db
      - recipes-cache
    network_mode: bridge

  redis-commander:
    depends_on:
      - recipes-cache
    env_file:
      - ./.env
    container_name: redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    links:
      - recipes-cache
    environment:
      - REDIS_HOSTS=recipes-cache
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_USER=${REDIS_USER}
    ports:
      - "8081:8081"
    network_mode: bridge

  recipes-web:
    container_name: recipes-web
    env_file:
      - ./.env
    depends_on:
      - recipes-api
    volumes:
      - ./frontend:/usr/src/frontend
      - ./frontend/node_modules:/usr/src/frontend/node_modules
      - ./frontend/.next:/usr/src/frontend/.next
    ports:
      - ${WEB_PORT}:3001
    build:
      context: .
      dockerfile: ./docker/dockerfile-api-frontend
    network_mode: bridge

volumes:
  recipes-db:
    driver: local
  recipes-cache:
    driver: local
  recipes-web:
    driver: local
  recipes-api:
    driver: local

networks:
  app-network:
    driver: bridge
